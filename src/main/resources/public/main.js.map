{"version":3,"sources":["./src/app/client.service.ts","./src/environments/environment.ts","./src/app/update-client/update-client.component.ts","./src/app/update-client/update-client.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/create-client/create-client.component.ts","./src/app/create-client/create-client.component.html","./src/app/app.module.ts","./src/app/client-details/client-details.component.ts","./src/app/client-details/client-details.component.html","./src/app/client.ts","./src/app/client-list/client-list.component.ts","./src/app/client-list/client-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  private baseUrl = 'http://localhost:8080/api/clients';\n\n  constructor(private http: HttpClient) { }\n\n  getClient(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createClient(client: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, client);\n  }\n\n  updateClient(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteClient(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getClientsList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Client } from '../client';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ClientService } from '../client.service';\n\n@Component({\n  selector: 'app-update-client',\n  templateUrl: './update-client.component.html',\n  styleUrls: ['./update-client.component.css']\n})\nexport class UpdateClientComponent implements OnInit {\n\n  id: number;\n  client: Client;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n              private clientService: ClientService) { }\n\n  ngOnInit() {\n    this.client = new Client();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.clientService.getClient(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.client = data;\n      }, error => console.log(error));\n  }\n\n  updateClient() {\n    this.clientService.updateClient(this.id, this.client)\n      .subscribe(data => {\n        console.log(data);\n        this.client = new Client();\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  onSubmit() {\n    this.updateClient();\n  }\n\n  gotoList() {\n    this.router.navigate(['/clients']);\n  }\n}\n","<h3>Update Client</h3>\n<div style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"client.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"client.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Passport Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"passportNumber\" required [(ngModel)]=\"client.passportNumber\" name=\"passportNumber\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Travel Agency client management app';\n}\n","\n\n<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a routerLink=\"clients\" class=\"nav-link\" routerLinkActive=\"active\">Client List</a>\n    </li>\n    <li class=\"nav-item\">\n      <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add Client</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n","import { ClientService } from '../client.service';\nimport { Client } from '../client';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-client',\n  templateUrl: './create-client.component.html',\n  styleUrls: ['./create-client.component.css']\n})\nexport class CreateClientComponent implements OnInit {\n\n  client: Client = new Client();\n  submitted = false;\n\n  constructor(private clientService: ClientService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newClient(): void {\n    this.submitted = false;\n    this.client = new Client();\n  }\n\n  save() {\n    this.clientService\n      .createClient(this.client).subscribe(data => {\n        console.log(data)\n        this.client = new Client();\n        this.gotoList();\n      },\n      error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/clients']);\n  }\n}\n","<h3>Create Client</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"client.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"client.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Passport Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"passportNumber\" required [(ngModel)]=\"client.passportNumber\" name=\"passportNumber\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newClient()\">Add</button> -->\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateClientComponent } from './create-client/create-client.component';\nimport { ClientDetailsComponent } from './client-details/client-details.component';\nimport { ClientListComponent } from './client-list/client-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateClientComponent } from './update-client/update-client.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateClientComponent,\n    ClientDetailsComponent,\n    ClientListComponent,\n    UpdateClientComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Client } from '../client';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ClientService } from '../client.service';\nimport { ClientListComponent } from '../client-list/client-list.component';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\n\n  id: number;\n  client: Client;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n              private clientService: ClientService) { }\n\n  ngOnInit() {\n    this.client = new Client();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.clientService.getClient(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.client = data;\n      }, error => console.log(error));\n  }\n\n  list(){\n    this.router.navigate(['clients']);\n  }\n\n  updateClient(id: number){\n    this.router.navigate(['update', id]);\n  }\n}\n","<h2>Client Details</h2>\n\n<hr/>\n<div *ngIf=\"client\">\n  <div>\n    <label><b>First Name: </b></label> {{client.firstName}}\n  </div>\n  <div>\n    <label><b>Last Name: </b></label> {{client.lastName}}\n  </div>\n  <div>\n    <label><b>Passport Number: </b></label> {{client.passportNumber}}\n  </div>\n</div>\n\n<div>\n  <button (click)=\"list()\" class=\"btn btn-info\">Back to List</button>\n  <button (click)=\"updateClient(client.id)\" class=\"btn btn-info\">Update</button>\n</div>\n","export class Client {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  passportNumber: string;\r\n}\r\n","import { ClientDetailsComponent } from '../client-details/client-details.component';\nimport { Observable } from 'rxjs';\nimport { ClientService } from '../client.service';\nimport { Client } from '../client';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent implements OnInit {\n  clients: Observable<Client[]>;\n\n  constructor(private clientService: ClientService,\n              private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.clients = this.clientService.getClientsList();\n  }\n\n  deleteClient(id: number) {\n    this.clientService.deleteClient(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  clientDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n\n  updateClient(id: number){\n    this.router.navigate(['update', id]);\n  }\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Client List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n      <tr>\n        <th>Firstname</th>\n        <th>Lastname</th>\n        <th>Passport number</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let client of clients | async\">\n        <td>{{client.firstName}}</td>\n        <td>{{client.lastName}}</td>\n        <td>{{client.passportNumber}}</td>\n        <td><button (click)=\"deleteClient(client.id)\" class=\"btn btn-danger\">Delete</button>\n          <button (click)=\"clientDetails(client.id)\" class=\"btn btn-info\">Details</button>\n          <button (click)=\"updateClient(client.id)\" class=\"btn btn-info\">Update</button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { ClientDetailsComponent } from './client-details/client-details.component';\nimport { CreateClientComponent } from './create-client/create-client.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientListComponent } from './client-list/client-list.component';\nimport { UpdateClientComponent } from './update-client/update-client.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'client', pathMatch: 'full' },\n  { path: 'clients', component: ClientListComponent },\n  { path: 'add', component: CreateClientComponent },\n  { path: 'update/:id', component: UpdateClientComponent },\n  { path: 'details/:id', component: ClientDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}